apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: crawler
  labels:
    app: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      imagePullSecrets:
        - name: mydockerreg
      nodeSelector:
        node-role.kubernetes.io/worker: worker
      terminationGracePeriodSeconds: 5
      #affinity:
        #podAffinity:
          #preferredDuringSchedulingIgnoredDuringExecution:
          #- weight: 100
            #podAffinityTerm:
              #labelSelector:
                #matchExpressions:
                #- key: app
                  #operator: In
                  #values:
                    #- api
              #topologyKey: kubernetes.io/hostname
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 5
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 5
      containers:
        -
          name: crawler-api
          image: hub.normans.co.za/crawler:0.0.3
          ports:
            - containerPort: 3000
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 1
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          env:
            -
              name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: database_host
            -
              name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: database_port
            -
              name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: database_user
            -
              name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: database_password
            -
              name: DATABASE_DB
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: database_name
            -
              name: APP_ENV
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: app_env
            -
              name: FAKTORY_URL
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: faktory_url

